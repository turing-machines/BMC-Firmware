#!/bin/sh

OVERLAY_INTERFACES="/mnt/overlay/upper/etc/network/interfaces"
BR0_PORTS="node1 node2 node3 node4 ge0 ge1"
DISABLE_MIGRATION_PATH="/mnt/overlay/upper/root/.disable_interface_migration"

#
# migrate_overlay_interfaces_to_v2_1
#
# Migrates the interfaces file to the v2.1 format
# that replaces eth0 with br0 and adds the bridge-ports line
#
migrate_overlay_interfaces_to_v2_1() {
    # Ensure the file exists
    if [ ! -f "$OVERLAY_INTERFACES" ]; then
        echo "$OVERLAY_INTERFACES does not exist"
        return 1
    fi

    # Check if the migration is disabled
    if [ -f "$DISABLE_MIGRATION_PATH" ]; then
        echo "Migration is disabled, exiting"
        return 0
    fi

    # Backup the original file
    if ! cp "$OVERLAY_INTERFACES" "${OVERLAY_INTERFACES}.tmp"; then
        echo "Failed to copy $OVERLAY_INTERFACES to ${OVERLAY_INTERFACES}.tmp"
        return 1
    fi

    # Check if br0 exists and if eth0 exists
    grep -E "^iface[[:space:]]+br0[[:space:]]" "$OVERLAY_INTERFACES" >/dev/null 2>&1 && br0_exists=1 || br0_exists=0
    grep -E "^iface[[:space:]]+eth0[[:space:]]" "$OVERLAY_INTERFACES" >/dev/null 2>&1 && eth0_exists=1 || eth0_exists=0
    grep -E "^iface[[:space:]]+eth0:[0-9]+" "$OVERLAY_INTERFACES" >/dev/null 2>&1 && eth0_aliases_exist=1 || eth0_aliases_exist=0

    # Check if migration comments were added
    grep -q "^# Configuration updated by migration script" "$OVERLAY_INTERFACES" && comments_exist=1 || comments_exist=0

    # Initialize bridge_ports_exist to 0
    bridge_ports_exist=0

    # Check if bridge-ports exists under iface br0
    if [ $br0_exists -eq 1 ]; then
        # Using awk to check if bridge-ports exists only within the br0 interface block
        bridge_ports_exist=$(
            awk '
                BEGIN { found=0 } 
                /^iface br0/ { p=1; next } 
                /^iface/ { p=0 } 
                p { if ($0 ~ /^[[:space:]]*bridge-ports/) found=1 } 
                END { print found }
            ' "$OVERLAY_INTERFACES"
        )
        # Ensure bridge_ports_exist is a number
        [ -n "$bridge_ports_exist" ] || bridge_ports_exist=0
    fi

    # Track if we make any actual changes
    br0_migrated=0
    bridge_ports_added=0

    # Initialize variables to track migrations
    migrated_interfaces=""

    # If eth0 exists and br0 doesn't exist, replace eth0 with br0
    if [ $eth0_exists -eq 1 ] && [ $br0_exists -eq 0 ]; then

        # Find all eth0 interfaces (main and aliases)
        eth_interfaces=$(grep -E "^(auto|iface) *eth0(:?[0-9]*) " "$OVERLAY_INTERFACES" 2>/dev/null | awk '{print $2}' | sort -u)
        
        # Collect interfaces that are about to be migrated
        for iface in $eth_interfaces; do
            new_iface=$(echo "$iface" | sed 's/^eth0/br0/')
            migrated_interfaces="${migrated_interfaces}# Interface ${iface} was migrated to ${new_iface}\n"
        done

        # Replace 'auto eth0' and 'auto eth0:X' with 'auto br0' and 'auto br0:X'
        sed -i 's/^auto *eth0\(:[0-9]\+\)\?/auto br0\1/' "$OVERLAY_INTERFACES"

        # Replace 'iface eth0' and 'iface eth0:X' with 'iface br0' and 'iface br0:X'
        sed -i 's/^iface *eth0\(:[0-9]\+\)\? /iface br0\1 /' "$OVERLAY_INTERFACES"

        # Set br0_migrated to 1 to indicate that we made changes
        br0_migrated=1

        # Set br0_exists to 1 to indicate that br0 now exists
        br0_exists=1

        echo "Migrated eth0 to br0"
    fi

    # Handle alias migrations separately - even if main interface is already br0
    if [ $eth0_aliases_exist -eq 1 ]; then
        # Find all eth0:X interfaces
        eth_aliases=$(grep -E "^(auto|iface) *eth0:[0-9]+" "$OVERLAY_INTERFACES" 2>/dev/null | awk '{print $2}' | sort -u)
        
        # Collect interfaces that are about to be migrated
        for alias in $eth_aliases; do
            new_alias=$(echo "$alias" | sed 's/^eth0:/br0:/')
            migrated_interfaces="${migrated_interfaces}# Interface ${alias} was migrated to ${new_alias}\n"
        done

        # Replace all eth0:X occurrences with br0:X
        sed -i 's/^auto *eth0:\([0-9]\+\)/auto br0:\1/' "$OVERLAY_INTERFACES"
        sed -i 's/^iface *eth0:\([0-9]\+\) /iface br0:\1 /' "$OVERLAY_INTERFACES"

        # Set br0_migrated to 1 to indicate that we made changes
        br0_migrated=1

        echo "Migrated eth0 aliases to br0"
    fi

    # Check if br0 exists (either originally or after replacing eth0)
    # and if bridge-ports are missing under br0, add it if necessary
    if [ $br0_exists -eq 1 ] && [ $bridge_ports_exist -eq 0 ]; then
        # If br0 exists but no bridge-ports, add the bridge-ports line under br0
        sed -i '/^iface br0 /a\  bridge-ports '"$BR0_PORTS" "$OVERLAY_INTERFACES"

        # Set bridge_ports_added to 1 to indicate that we made changes
        bridge_ports_added=1
        echo "Added missing bridge-ports to br0"
    fi

    # Add migration comments to the top of the file only if changes were made and comments don't exist
    if ([ $br0_migrated -eq 1 ] || [ $bridge_ports_added -eq 1 ]) && [ $comments_exist -eq 0 ]; then
        # Build the header text in a variable
        header_text="# Configuration updated by migration script\n"
        header_text="${header_text}# Original file backed up at ${OVERLAY_INTERFACES}.old\n"
        
        # Add all interface migrations
        if [ -n "$migrated_interfaces" ]; then
            header_text="${header_text}${migrated_interfaces}"
        fi
        
        # Add bridge-ports comment only if we added bridge-ports configuration
        if [ $bridge_ports_added -eq 1 ]; then
            header_text="${header_text}# Added bridge ports to br0\n"
            header_text="${header_text}# Full bridge configuration: bridge-ports ${BR0_PORTS}\n"
        fi

        header_text="${header_text}#\n"

        # Insert all the header text at once at the beginning of the file
        printf "%b$(cat ${OVERLAY_INTERFACES})" "$header_text" > "$OVERLAY_INTERFACES"

        # Changes made, save the original file as .old
        mv "${OVERLAY_INTERFACES}.tmp" "${OVERLAY_INTERFACES}.old"
        
        echo "Migration completed"
    else
        # No changes made, just clean up
        rm "${OVERLAY_INTERFACES}.tmp"
    fi
}

case "$1" in
    start|"")
        # Kind of a hack, don't know where else to put this
        # Rename `eth0` to `dsa` on boot, so that it is not confused for a usable
        # Ethernet interface
        ip link set eth0 name dsa

        # Perform migration of interfaces
        migrate_overlay_interfaces_to_v2_1
        ;;
    *)
        echo "Usage: $0 {start}"
        exit 1
        ;;
esac
